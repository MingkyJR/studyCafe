<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="tileConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>classpath:tiles/*.xml</beans:value>        <!-- tiles의 모든 설정 XML 파일 -->
            </beans:list>
        </beans:property>
        <beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory"/>
    </beans:bean>
    
    
    <!-- tiles 관련 bean 등록 -->
<!-- 	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"> 
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/> 
	</beans:bean> -->
	
	
	<!-- Controller파일의 위치를 설정 -->
	<!-- 참고   component-scan요소가 자동으로 인식하는 애너테이션
		 @Controller : Controller역할
		 @Service : Service역할
		 @Repository : DB작업 
		 @Required : 필수 property임을 명시
		 @Autowired: 의존관계 설정시 사용. 객체를 자동 주입. Spring 종속 애너테이션.org.springframework.beans.factory.annotation.Autowired
		 @Inject : @Autowired와 유사. Spring에 종속적이지 않는 애너테이션. javax.inject.Inject 
	 -->
	<context:component-scan base-package="com.studycafe"/>
	
	<!-- 파라미터가 없는 기본생성자를 이용한 bean객체 생성 -->
	<!-- bean요소  
	     class="패키지명.클래스명"
	     id="id명" -->
	<!-- EmpServiceImpl empService = new EmpServiceImpl(); -->     	
	<!-- <beans:bean class="com.mycom.app.emp.service.EmpServiceImpl" id="empService"></beans:bean> -->

	<!-- EmpDAOImpl empDAO = new EmpDAOImpl(); -->
	<!-- <beans:bean class="com.mycom.app.emp.repository.EmpDAOImpl" id="empDAO"/> -->
	
	
	<!-- 인터셉터(클래스)bean 등록 -->
	<interceptors>
   <!-- <beans:bean class="패키지명.인터셉터클래스명"/> -->
		<beans:bean class="com.studycafe.scafe.interceptor.MonitoringInterceptor"/>
	</interceptors>
	
	
	
</beans:beans>
